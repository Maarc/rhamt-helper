= RHAMT helper

Red Hat Application Migration Toolkit (RHAMT) helper automates the following tasks:

* *build* of the latest RHAMT Command-Line Interface (CLI) and Web Console (__"01_build_RHAMT.sh"__ and __"01_build_RHAMT_web.sh"__ scripts)
* *batch analysis* of an important amount of Java applications grouped in several subfolders (__"02_analyze_apps.sh"__ script)


== Usage

1. Check out the rhamt-helper
+
  $ git clone https://github.com/Maarc/rhamt-helper
  $ cd rhamt-helper

2. Copy the applications you want to analyze in sub-directories of "02__apps"
+
For example you can create a "new-apps-01" directory and copy your applications there:
+
  $ mkdir /02__apps/new-apps-01
  $ cp my_apps/*.ear /02__apps/new-apps-01
+
TIP: For performance reasons, it is not recommended to analyze more than 1 GB of applications in a same report. Split the applications you want to analyze in several sub-directories of "02__apps".

3. [Optional] Adjust the RHAMT helper configuration (see <<Options>>)

4. Execute the RHAMT helper
+
 $ ./run.sh
+
It will automatically ...
+
a. check-out and build locally the latest stable RHAMT CLI
+
b. analyze all applications in in sub-directories of "02__apps"

5. View the results in "02__reports" by opening the created HTML reports in
+
  02__reports/YYYY_MM_DD__HH_MM_SS__4.0.0-SNAPSHOT__new-apps-01/index.html


== Options

The following options could be changed while running the rhamt-helper:

* *01_build_RHAMT.sh* - Script checking-out and building RHAMT CLI
+
** *RHAMT_BASE_REPO*: Base git directory for the RHAMT CLI code.
+
TIP: Defaults to the stable/patched one "Maarc". It can be updated to point to the official repository "windup" instead.

* *02_analyze_apps.sh* - Script analyzing your applications
+
** *MAX_MEMORY*: max Java Heap used by the RHAMT CLI
** *MAX_METASPACE_SIZE*: max Java Metaspace used by the RHAMT CLI
** *PACKAGES*: Java packages decompiled during the analysis
+
TIP: "" -> decompiles everything, "de nl" -> decompiles de.* and nl.* packages

** *TARGET*: RHAMT targets



== Performance

While analyzing an important amount of applications, it is key to:

* Increase the default ulimit on your operating system
+
TIP: This is done by "00_update_ulimit.sh" (for MacOS users) or by following the instructions on https://access.redhat.com/solutions/60746[this article] for RHEL/Fedora users.

* Set a limited list of Java packages to be decompiled (PACKAGES).

* Set a proper value for the JVM space (MAX_MEMORY, MAX_METASPACE_SIZE).





== Notes

After an initial build, you can generate new report by running:

 $ ./02__analyze_apps.sh


If you want to update an rebuild the RHAMT CLI, just execute:

 $ ./01__build_RHAMT.sh
